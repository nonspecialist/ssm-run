#!/bin/bash

CMD=$1
shift

INSTANCE_IDS=${INSTANCE_IDS:-$@}

 # INSTANCE_IDS=$@

PARAMS='{"commands":["'$CMD'"],"executionTimeout":["600"]}'

# Check that the agent is installed and running
for instance in $INSTANCE_IDS; do
    STATUS=$( aws ssm describe-instance-information \
        --instance-information-filter-list key=InstanceIds,valueSet=$instance \
        --query 'InstanceInformationList[].{id:InstanceId,status:PingStatus}' \
        --output text 2>&1 )

    if [ $? -ne 0 ]; then
        echo $STATUS
        INSTANCE_IDS=${INSTANCE_IDS/$instance}
        continue
    fi

    if ! echo "$STATUS" | grep -q "Online"; then
        echo instance $instance is not running SSM agent
        INSTANCE_IDS=${INSTANCE_IDS/$instance}
    fi
done

ALL_SPACE="^[[:space:]]$"
if [[ -z "$INSTANCE_IDS" || "$INSTANCE_IDS" =~ $ALL_SPACE ]]; then
    echo No instances available to run commands
    exit 2
fi

ID=$( aws ssm send-command \
    --document-name AWS-RunShellScript \
    --instance-ids $INSTANCE_IDS \
    --parameters "$PARAMS" \
    --timeout-seconds 600 \
    --query Command.CommandId \
    --output text 2>&1
)
RES=$?

if [ $RES -ne 0 ]; then
    echo "ERROR invoking command: $ID"
    exit $RES
fi

echo "Command launched with id $ID"

# Wait for all instances to have finished running, one way or another
n_instances=$( echo $INSTANCE_IDS | wc -w )
while true; do
    finished=0
    for instance in $INSTANCE_IDS; do
        STATUS=$( aws ssm get-command-invocation --command-id $ID --instance-id $instance --query Status --output text | tr '[A-Z]' '[a-z]' )
        NOW=$( date +%Y-%m-%dT%H:%M:%S%z )
        echo $NOW $instance: $STATUS
        case $STATUS in
            pending|inprogress|delayed) : ;;
            *) finished=$(( finished + 1 )) ;;
        esac
    done
    [ $finished -ge $n_instances ] && break
    sleep 2
done

for instance in $INSTANCE_IDS; do
    STATUS=$( aws ssm get-command-invocation --command-id $ID --instance-id $instance --query Status --output text )
    OUT_RESULT=$( aws ssm get-command-invocation --command-id $ID --instance-id $instance --query StandardOutputContent --output text )
    ERR_RESULT=$( aws ssm get-command-invocation --command-id $ID --instance-id $instance --query StandardErrorContent --output text )

    echo "------------------------------------"
    echo "RESULTS FROM $instance (STATUS $STATUS):"
    if [ -n "$OUT_RESULT" ]; then
        echo "STDOUT:"
        echo "$OUT_RESULT"
        echo "------------------------------------"
    fi
    if [ -n "$ERR_RESULT" ]; then
        echo "STDERR:"
        echo "$ERR_RESULT"
        echo "------------------------------------"
    fi
    if [ -z "$OUT_RESULT" -a -z "$ERR_RESULT" ]; then
        echo NO OUTPUT RETURNED
    fi
done
